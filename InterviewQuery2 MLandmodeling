types of questions:
Modeling Case Study:  evaluate and explain a particular part of the model building process
Recommendation and Search Engines
Machine Learning Algorithm Concepts

Model Case Study:  take machine learning concepts and ask how they could be applied to fix a certain problem
              Data Exploration & Pre-Processing
              Feature Selection & Engineering
              Model Selection
              Cross Validation
              Evaluation Metrics
              Testing and Roll Out
      Framework:
      Clarification(why this model, what's the use,how affwct bisuness, what matters accuracy?)
      Make Assumptions
      Define Priorities (build new/exist, user behavior, data set)
      Go through the modeling lifecycle
      
      Pre-Processing:   Outliers / Class Imbalance / Skewed Data / Missing Data
      Feature Selection: selecting good features /Variable Transformation /PCA /BINNING
      Model Selection: Explainability(knn, lm, trees)
                       Number of Features and Data Points (fewer option for small sets)
                       Categorical vs. Numerical Feature
                       Linearity
                       Training Speed
                       Prediction Speed and Performance
                       
 ML algorithm: def, eplain, difference, assumption, tuning, pro and cons, proformance, speed ...
               cheatsheets: regression, logictic regression, MLE, gradient descent, sgd, batch gd, regularization
                            decision tree (eduction in RSS,impurity measure, gini, entrophe)
                            rf（correlated features： set fraction small, fail to identify strong predictor
                                feature importances： information gain，what kind of models for bagging: high var,low bias
                                OOB err: predicstion with dt not use x_i,y_i OOB score: dataset small）
                            boost trees: ada boost: stump, err, another stump ..
                                         gradient boost: leaf, err, leaf (8 ~ 32), err, leaf... (fit the residual, grad of loss)
                                         gb regularization: M: numder of trees, learning rate, stohastic, pruning and punish #leaves
                                         xgboost: tree grow depth wise, lightgbm: tree grow leafwise
                                         xg boost: fi trees that min loss+prnality, use 2nd term in tyler
                                         pro and con: easy-to-read and interpret algorithm, sensitive to outliers
               encode： freq one hot, split into buckets, target encode (replace by mean response), conditional probability, 


Model Eval: 
              Cross Validation: train vs test, k fold, LOOCV
              Evaluation Metrics: Accuracy, Precision, Recall, ROC AUC, PR AUC, AIC
              Testing: set up baseline, Backtesting and validation, AB Testing Roll Out
             
Applied modeling:  scenario-based question

System Design:
              Problem statement, Identify metrics, Identify requirements, Train and evaluate model, Design high level system, Scale the design
              fewtures: one hot, feature hashing, Crossed features (conjunction), Embedding, Numeric features(normalization, scale)
              Training Pipeline...Inference...Metrics Evaluation(online, offline)
              skipped the rest...
